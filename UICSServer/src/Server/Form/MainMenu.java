/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Server.Form;

import Server.Form.Admin.UpdateAdmin;
import Server.Form.Admin.AddAdmin;
import Server.Controller.AdminController;
import Server.Controller.BaseController;
import Server.Controller.CentreController;
import Server.Controller.CustomerController;
import Server.Controller.EmpController;
import Server.Controller.LoggingController;
import Server.Controller.TreeController;
import Server.Controller.ZoneController;
import Server.Entity.Admin;
import Server.Entity.Centre;
import Server.Entity.Customer;
import Server.Entity.Employee;
import Server.Entity.Zone;
import Server.Form.Centre.AddCentre;
import Server.Form.Centre.UpdateCentre;
import Server.Form.Customer.CustomerDetails;
import Server.Form.Employee.AddEmp;
import Server.Form.Employee.UpdateEmp;
import Server.Form.Zone.AddZone;
import Server.Form.Zone.UpdateZone;
import java.awt.event.MouseEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author QUANGHUY
 */
public class MainMenu extends javax.swing.JFrame {
    /*Properties*/

    private AdminController adminController;
    private CentreController centreController;
    private EmpController empController;
    private ZoneController zoneController;
    private CustomerController custController;
    private LoggingController logController;
    private TreeController treeController;
    /**
     * Creates new form AdminManage
     */
    static int id;

    public MainMenu() {
        initComponents();
        btnDeleteAdmin.setEnabled(false);
        btnDeleteCentre.setEnabled(false);
        btnDeleteEmp.setEnabled(false);
        btnDeleteZone.setEnabled(false);
        btnUpdateCentre.setEnabled(false);
        btnUpdateEmp.setEnabled(false);
        btnUpdateZone.setEnabled(false);
        btnReport.setEnabled(false);
        btnView.setEnabled(false);
        setLocationRelativeTo(this);
    }

    public void setAdminController(AdminController adminController) {
        this.adminController = adminController;
    }

    public AdminController getAdminController() {
        return adminController;
    }

    public void setCentreController(CentreController centreController) {
        this.centreController = centreController;
    }

    public CentreController getCentreController() {
        return centreController;
    }

    public void setEmpController(EmpController empController) {
        this.empController = empController;
    }

    public EmpController getEmpController() {
        return empController;
    }

    public void setZoneController(ZoneController zoneController) {
        this.zoneController = zoneController;
    }

    public ZoneController getZoneController() {
        return zoneController;
    }

    public void setCustController(CustomerController custController) {
        this.custController = custController;
    }

    public CustomerController getCustController() {
        return custController;
    }

    public LoggingController getLogController() {
        return logController;
    }

    public void setLogController(LoggingController logController) {
        this.logController = logController;
    }

    public TreeController getTreeController() {
        return treeController;
    }

    public void setTreeController(TreeController treeController) {
        this.treeController = treeController;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblAdminList = new javax.swing.JTable();
        btnDeleteAdmin = new javax.swing.JButton();
        btnAddAdmin = new javax.swing.JButton();
        btnReloadAdmin = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblCentreList = new javax.swing.JTable();
        btnDeleteCentre = new javax.swing.JButton();
        btnAddCentre = new javax.swing.JButton();
        btnReloadCentre = new javax.swing.JButton();
        btnUpdateCentre = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblEmpList = new javax.swing.JTable();
        btnDeleteEmp = new javax.swing.JButton();
        btnAddEmp = new javax.swing.JButton();
        btnReloadEmp = new javax.swing.JButton();
        btnUpdateEmp = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblZoneList = new javax.swing.JTable();
        btnDeleteZone = new javax.swing.JButton();
        btnAddZone = new javax.swing.JButton();
        btnReloadZone = new javax.swing.JButton();
        btnUpdateZone = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblCustList = new javax.swing.JTable();
        btnDeleteCust = new javax.swing.JButton();
        pnlSearch = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtUICode = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMiddleName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        btnResult = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cbbStatus = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        cbbCentreName = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        cbbDay = new javax.swing.JComboBox();
        cbbMonth = new javax.swing.JComboBox();
        btnClearCust = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        btnSend = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();
        jPanel2 = new javax.swing.JPanel();
        btnLogOut = new javax.swing.JButton();
        btnEditProfile = new javax.swing.JButton();
        lbAdmin = new javax.swing.JLabel();
        lbAdminEmail = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnReport = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("UICS Admin Menu");
        setResizable(false);

        jTabbedPane1.setName("Admin"); // NOI18N

        tblAdminList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAdminList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAdminListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblAdminList);

        btnDeleteAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/delete.png"))); // NOI18N
        btnDeleteAdmin.setText("Delete");
        btnDeleteAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAdminActionPerformed(evt);
            }
        });

        btnAddAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/add1-20.png"))); // NOI18N
        btnAddAdmin.setText("Add");
        btnAddAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAdminActionPerformed(evt);
            }
        });

        btnReloadAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/refresh_20x20.png"))); // NOI18N
        btnReloadAdmin.setText("Reload");
        btnReloadAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(btnAddAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnDeleteAdmin)
                .addGap(30, 30, 30)
                .addComponent(btnReloadAdmin)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddAdmin)
                    .addComponent(btnDeleteAdmin)
                    .addComponent(btnReloadAdmin))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Admin", jPanel1);

        tblCentreList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Centre Code", "Zone Name", "Centre Name", "Location", "IP Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCentreList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCentreListMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblCentreList);

        btnDeleteCentre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/delete.png"))); // NOI18N
        btnDeleteCentre.setText("Delete");
        btnDeleteCentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCentreActionPerformed(evt);
            }
        });

        btnAddCentre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/add1-20.png"))); // NOI18N
        btnAddCentre.setText("Add");
        btnAddCentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCentreActionPerformed(evt);
            }
        });

        btnReloadCentre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/refresh_20x20.png"))); // NOI18N
        btnReloadCentre.setText("Reload");
        btnReloadCentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadCentreActionPerformed(evt);
            }
        });

        btnUpdateCentre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/Edit.png"))); // NOI18N
        btnUpdateCentre.setText("Edit");
        btnUpdateCentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCentreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddCentre, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(btnUpdateCentre, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteCentre)
                .addGap(17, 17, 17)
                .addComponent(btnReloadCentre)
                .addGap(34, 34, 34))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddCentre)
                    .addComponent(btnDeleteCentre)
                    .addComponent(btnReloadCentre)
                    .addComponent(btnUpdateCentre))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Centre", jPanel3);

        tblEmpList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Email", "Centre Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEmpList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmpListMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblEmpList);

        btnDeleteEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/delete.png"))); // NOI18N
        btnDeleteEmp.setText("Delete");
        btnDeleteEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteEmpActionPerformed(evt);
            }
        });

        btnAddEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/add1-20.png"))); // NOI18N
        btnAddEmp.setText("Add");
        btnAddEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEmpActionPerformed(evt);
            }
        });

        btnReloadEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/refresh_20x20.png"))); // NOI18N
        btnReloadEmp.setText("Reload");
        btnReloadEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadEmpActionPerformed(evt);
            }
        });

        btnUpdateEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/Edit.png"))); // NOI18N
        btnUpdateEmp.setText("Edit");
        btnUpdateEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateEmpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(btnUpdateEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDeleteEmp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReloadEmp)
                .addGap(40, 40, 40))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddEmp)
                    .addComponent(btnDeleteEmp)
                    .addComponent(btnReloadEmp)
                    .addComponent(btnUpdateEmp))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Employee", jPanel4);

        tblZoneList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PinCode", "Zone Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblZoneList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblZoneListMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblZoneList);

        btnDeleteZone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/delete.png"))); // NOI18N
        btnDeleteZone.setText("Delete");
        btnDeleteZone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteZoneActionPerformed(evt);
            }
        });

        btnAddZone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/add1-20.png"))); // NOI18N
        btnAddZone.setText("Add");
        btnAddZone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddZoneActionPerformed(evt);
            }
        });

        btnReloadZone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/refresh_20x20.png"))); // NOI18N
        btnReloadZone.setText("Reload");
        btnReloadZone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadZoneActionPerformed(evt);
            }
        });

        btnUpdateZone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/Edit.png"))); // NOI18N
        btnUpdateZone.setText("Edit");
        btnUpdateZone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateZoneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddZone, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(btnUpdateZone, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDeleteZone)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReloadZone)
                .addGap(41, 41, 41))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddZone)
                    .addComponent(btnDeleteZone)
                    .addComponent(btnReloadZone)
                    .addComponent(btnUpdateZone))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Zone", jPanel5);

        tblCustList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "First Name", "Middle Name", "Last Name", "UI Code", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCustList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCustListMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tblCustList);

        btnDeleteCust.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/delete.png"))); // NOI18N
        btnDeleteCust.setText("Delete");
        btnDeleteCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCustActionPerformed(evt);
            }
        });

        pnlSearch.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Aharoni", 0, 14), new java.awt.Color(0, 255, 0))); // NOI18N

        jLabel1.setText("First Name:");

        jLabel2.setText("UI Code:");

        jLabel3.setText("Middle Name:");

        jLabel5.setText("Last Name:");

        btnResult.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/search.png"))); // NOI18N
        btnResult.setText("Result");
        btnResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResultActionPerformed(evt);
            }
        });

        jLabel6.setText("Status:");

        cbbStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Sent", "Not Sent" }));

        jLabel7.setText("Centre:");

        jLabel8.setText("Day:");

        jLabel9.setText("Month:");

        jLabel10.setText("Year:");

        cbbDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        cbbMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        btnClearCust.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/clear.png"))); // NOI18N
        btnClearCust.setText("Clear");
        btnClearCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearCustActionPerformed(evt);
            }
        });

        jLabel4.setText("Created Date");

        javax.swing.GroupLayout pnlSearchLayout = new javax.swing.GroupLayout(pnlSearch);
        pnlSearch.setLayout(pnlSearchLayout);
        pnlSearchLayout.setHorizontalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchLayout.createSequentialGroup()
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSearchLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbbDay, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE))
                    .addGroup(pnlSearchLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlSearchLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnlSearchLayout.createSequentialGroup()
                                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSearchLayout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUICode, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbbCentreName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSearchLayout.createSequentialGroup()
                        .addComponent(btnResult)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClearCust)))
                .addContainerGap())
        );
        pnlSearchLayout.setVerticalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchLayout.createSequentialGroup()
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtUICode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(cbbCentreName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(cbbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnResult, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearCust, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(cbbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(cbbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap())
        );

        btnView.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/Preview.png"))); // NOI18N
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnSend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/Update.png"))); // NOI18N
        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)
            .addComponent(pnlSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(btnSend)
                .addGap(58, 58, 58)
                .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDeleteCust)
                .addGap(60, 60, 60))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(btnDeleteCust, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Customer", jPanel6);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        tree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        tree.setRootVisible(false);
        tree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                treeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tree);

        jTabbedPane1.addTab("Tree", jScrollPane2);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnLogOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/logout.png"))); // NOI18N
        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        btnEditProfile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/form_edit.png"))); // NOI18N
        btnEditProfile.setText("Edit Profile");
        btnEditProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditProfileActionPerformed(evt);
            }
        });

        lbAdmin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbAdmin.setText("AdminName");

        lbAdminEmail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbAdminEmail.setText("AdminEmail");

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/admin.png"))); // NOI18N

        btnReport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Server/image/All_reports.png"))); // NOI18N
        btnReport.setText("Make Report");
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbAdminEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEditProfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLogOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbAdmin)
                .addGap(18, 18, 18)
                .addComponent(lbAdminEmail)
                .addGap(37, 37, 37)
                .addComponent(btnEditProfile)
                .addGap(18, 18, 18)
                .addComponent(btnLogOut)
                .addGap(18, 18, 18)
                .addComponent(btnReport)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Admin");
        jTabbedPane1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /*Functional method*/

    void renderAdmin(ArrayList<Admin> admins) {
        /*Add information to table model*/
        DefaultTableModel model = (DefaultTableModel) tblAdminList.getModel();
        Vector row;
        //Copy data from ArrayList to table model
        for (int i = 0; i < admins.size(); i++) {
            row = new Vector();
            row.add(admins.get(i).getAdminName());
            row.add(admins.get(i).getEmail());
            model.addRow(row);
        }
        tblAdminList.setModel(model);
    }

    void renderCentre(ArrayList<Centre> centres) {
        /*Add information to table model*/
        DefaultTableModel model = (DefaultTableModel) tblCentreList.getModel();
        Vector row;
        //Copy data from ArrayList to table model
        for (int i = 0; i < centres.size(); i++) {
            row = new Vector();
            row.add(centres.get(i).getCentreCode());
            row.add(centres.get(i).getZoneName());
            row.add(centres.get(i).getCentreName());
            row.add(centres.get(i).getLocation());
            row.add(centres.get(i).getIp());
            model.addRow(row);
        }
        tblCentreList.setModel(model);
    }

    void renderEmp(ArrayList<Employee> emps) {
        /*Add information to table model*/
        DefaultTableModel model = (DefaultTableModel) tblEmpList.getModel();
        Vector row;
        //Copy data from ArrayList to table model
        for (int i = 0; i < emps.size(); i++) {
            row = new Vector();
            row.add(emps.get(i).getEmpID());
            row.add(emps.get(i).getEmpName());
            row.add(emps.get(i).getEmail());
            row.add(emps.get(i).getCentreName());
            model.addRow(row);
        }
        tblEmpList.setModel(model);
    }

    void renderZone(ArrayList<Zone> zones) {
        /*Add information to table model*/
        DefaultTableModel model = (DefaultTableModel) tblZoneList.getModel();
        Vector row;
        //Copy data from ArrayList to table model
        for (int i = 0; i < zones.size(); i++) {
            row = new Vector();
            row.add(zones.get(i).getPin_Code());
            row.add(zones.get(i).getZone_Name());
            model.addRow(row);
        }
        tblZoneList.setModel(model);
    }

    void renderCust(ArrayList<Customer> custs) {
        /*Add information to table model*/
        DefaultTableModel model = (DefaultTableModel) tblCustList.getModel();
        //Copy data from ArrayList to table model
        Vector row;
        for (int i = 0; i < custs.size(); i++) {
            row = new Vector();
            row.add(custs.get(i).getCustID());
            row.add(custs.get(i).getFirstName());
            row.add(custs.get(i).getMiddleName());
            row.add(custs.get(i).getLastName());
            row.add(custs.get(i).getUICode());
            row.add(custs.get(i).getCustStatus());
            model.addRow(row);
        }
        tblCustList.setModel(model);
    }

    void renderTree(ArrayList tree) {
        DefaultMutableTreeNode rootNode = new DefaultMutableTreeNode("Root Node");
        DefaultTreeModel treeModel = new DefaultTreeModel(rootNode);
        DefaultMutableTreeNode zoneNode;
        ArrayList zone;
        DefaultMutableTreeNode centreNode;
        ArrayList centreList;
        ArrayList centre;
        DefaultMutableTreeNode empNode;
        ArrayList empList;
        String empName;
        for (int i = 0; i < tree.size(); i++) {
            //Copy zone name to tree node level 1
            zone = (ArrayList) tree.get(i);
            zoneNode = new DefaultMutableTreeNode(zone.get(0));
            rootNode.add(zoneNode);
            centreList = (ArrayList) zone.get(1);
            for (int j = 0; j < centreList.size(); j++) {
                //Copy centre name to tree node level 2
                centre = (ArrayList) centreList.get(j);
                centreNode = new DefaultMutableTreeNode(centre.get(0));
                zoneNode.add(centreNode);
                empList = (ArrayList) centre.get(1);
                for (int k = 0; k < empList.size(); k++) {
                    //copy employee name to tree node level 3
                    empName = (String) empList.get(k);
                    empNode = new DefaultMutableTreeNode(empName);
                    centreNode.add(empNode);
                }
            }
        }
        this.tree.setModel(treeModel);
    }

    void renderCombobox(ArrayList<Centre> centres) {
        //load centre name to combo box
        cbbCentreName.removeAllItems();
        cbbCentreName.addItem("Choose Centre");
        for (Centre c : centres) {
            cbbCentreName.addItem(c.getCentreName());
        }
    }

    public void refresh() {
        /*refresh main menu*/
        lbAdmin.setText(BaseController.getSession().getCurrentAdmin().getAdminName());
        lbAdminEmail.setText(BaseController.getSession().getCurrentAdmin().getEmail());
        refreshCustomer();
        refreshAdmin();
        refreshEmp();
        refreshZone();
        refreshCentre();
        refreshTree();
    }

    public void refreshTree() {
        this.getTreeController().load();
    }

    void refreshCustomer() {
        DefaultTableModel custModel = (DefaultTableModel) tblCustList.getModel();
        //remove all table row
        while (custModel.getRowCount() > 0) {
            custModel.removeRow(0);
        }
        /*Load data to model*/
        this.custController.load();
        btnView.setEnabled(false);
    }

    void refreshZone() {
        DefaultTableModel zoneModel = (DefaultTableModel) tblZoneList.getModel();
        //remove all table row
        while (zoneModel.getRowCount() > 0) {
            zoneModel.removeRow(0);
        }
        /*Load data to table model*/
        this.zoneController.load();
        if (tblZoneList.getSelectedRow() == -1) {
            btnDeleteZone.setEnabled(false);
            btnDeleteZone.setEnabled(false);
        }
    }

    void refreshCentre() {
        DefaultTableModel centreModel = (DefaultTableModel) tblCentreList.getModel();
        //remove all table row
        while (centreModel.getRowCount() > 0) {
            centreModel.removeRow(0);
        }
        /*Load data to table model*/
        this.centreController.load();
        if (tblCentreList.getSelectedRow() == -1) {
            btnDeleteCentre.setEnabled(false);
            btnUpdateCentre.setEnabled(false);
        }
    }

    void refreshAdmin() {
        DefaultTableModel model = (DefaultTableModel) tblAdminList.getModel();
        //remove all table row
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
        /*Load data to table model*/
        this.adminController.load();
        if (tblAdminList.getSelectedRow() == -1) {
            btnDeleteAdmin.setEnabled(false);
        }
    }

    void refreshEmp() {
        DefaultTableModel empModel = (DefaultTableModel) tblEmpList.getModel();
        //remove all table row
        while (empModel.getRowCount() > 0) {
            empModel.removeRow(0);
        }
        /*Load data to table model*/
        this.empController.load();
        if (tblEmpList.getSelectedRow() == -1) {
            btnDeleteEmp.setEnabled(false);
            btnDeleteEmp.setEnabled(false);
        }
    }

    void showMessage(String message, int messageType) {
        JOptionPane.showMessageDialog(this, message, "Message", messageType);
    }
    private void btnEditProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditProfileActionPerformed
        // init and load data to edit profile
        UpdateAdmin editProfile = new UpdateAdmin(this, true);
        editProfile.setAdmin(BaseController.getSession().getCurrentAdmin());
        editProfile.refresh();
        editProfile.setVisible(true);
    }//GEN-LAST:event_btnEditProfileActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        this.getLogController().logOut();
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnAddAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAdminActionPerformed
        /*Create AddAdmin dialog*/
        new AddAdmin(this, true).setVisible(true);
    }//GEN-LAST:event_btnAddAdminActionPerformed

    private void btnDeleteAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAdminActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this?", "Confirm Message", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        //Admin choose "Yes" = 0
        if (result == 0) {
            //Get amdinName from table to delete
            DefaultTableModel model = (DefaultTableModel) tblAdminList.getModel();
            String adminName = (String) model.getValueAt(tblAdminList.getSelectedRow(), 0);
            this.getAdminController().delete(adminName);
            this.refreshAdmin();
        }
    }//GEN-LAST:event_btnDeleteAdminActionPerformed

////////////////////////////////////////////////////////////////////////////////
                /*Event handling method*/
    /*Admin Tab event*/
    private void tblAdminListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAdminListMouseClicked
        //
        btnDeleteAdmin.setEnabled(true);
    }//GEN-LAST:event_tblAdminListMouseClicked

    private void tblCentreListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCentreListMouseClicked
        // 
        btnDeleteCentre.setEnabled(true);
        btnUpdateCentre.setEnabled(true);
    }//GEN-LAST:event_tblCentreListMouseClicked

    private void btnDeleteCentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCentreActionPerformed
        // 
        int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this?", "Confirm Message", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        //Admin choose "Yes" = 0
        if (result == 0) {
            //Get centreCode from table to delete
            DefaultTableModel model = (DefaultTableModel) tblCentreList.getModel();
            String centreCode = model.getValueAt(tblCentreList.getSelectedRow(), 0).toString();
            this.getCentreController().delete(centreCode);
            this.refresh();
        }
    }//GEN-LAST:event_btnDeleteCentreActionPerformed

    private void btnAddCentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCentreActionPerformed
        // init and load data to AddCentre
        DefaultTableModel model = (DefaultTableModel) tblZoneList.getModel();
        AddCentre add = new AddCentre(this, true, model.getDataVector());
        add.setVisible(true);

    }//GEN-LAST:event_btnAddCentreActionPerformed

    private void tblEmpListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmpListMouseClicked
        // 
        btnDeleteEmp.setEnabled(true);
        btnUpdateEmp.setEnabled(true);
    }//GEN-LAST:event_tblEmpListMouseClicked

    private void btnDeleteEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteEmpActionPerformed
        // 
        int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this?", "Confirm Message", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        //Admin choose "Yes" = 0
        if (result == 0) {
            //Get empID from table to delete
            DefaultTableModel model = (DefaultTableModel) tblEmpList.getModel();
            int empID = (int) model.getValueAt(tblEmpList.getSelectedRow(), 0);
            this.getEmpController().delete(empID);
            this.refresh();
        }
    }//GEN-LAST:event_btnDeleteEmpActionPerformed

    private void btnAddEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEmpActionPerformed
        // init and load data to AddEmp
        DefaultTableModel model = (DefaultTableModel) tblCentreList.getModel();
        AddEmp add = new AddEmp(this, true, model.getDataVector());
        add.setVisible(true);
    }//GEN-LAST:event_btnAddEmpActionPerformed

    private void tblZoneListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblZoneListMouseClicked
        // 
        btnDeleteZone.setEnabled(true);
        btnUpdateZone.setEnabled(true);
    }//GEN-LAST:event_tblZoneListMouseClicked

    private void btnDeleteZoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteZoneActionPerformed
        // 
        int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this?", "Confirm Message", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        //Admin choose "Yes" = 0
        if (result == 0) {
            //Get pincode from table to delete
            DefaultTableModel model = (DefaultTableModel) tblZoneList.getModel();
            String pin_Code = model.getValueAt(tblZoneList.getSelectedRow(), 0).toString();
            this.getZoneController().delete(pin_Code);
            this.refresh();
        }
    }//GEN-LAST:event_btnDeleteZoneActionPerformed

    private void btnAddZoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddZoneActionPerformed
        // TODO 
        new AddZone(this, true).setVisible(true);
    }//GEN-LAST:event_btnAddZoneActionPerformed

    private void btnUpdateCentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCentreActionPerformed
        // init and load data to UpdateCentre
        UpdateCentre updateCentre = new UpdateCentre(this, true);
        String centreCode = tblCentreList.getValueAt(tblCentreList.getSelectedRow(), 0).toString();
        updateCentre.setCentre(centreController.getServiceManager().getCentreManagerService().get(centreCode));
        updateCentre.refresh();
        updateCentre.setVisible(true);
    }//GEN-LAST:event_btnUpdateCentreActionPerformed

    private void btnUpdateEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateEmpActionPerformed
        // init and load data to UpdateEmp
        DefaultTableModel model = (DefaultTableModel) tblCentreList.getModel();
        UpdateEmp updateEmp = new UpdateEmp(this, true, model.getDataVector());
        int empID = (int) tblEmpList.getValueAt(tblEmpList.getSelectedRow(), 0);
        updateEmp.setEmp(empController.getServiceManager().getEmpManagerService().get(empID));
        updateEmp.refresh();
        updateEmp.setVisible(true);
    }//GEN-LAST:event_btnUpdateEmpActionPerformed

    private void btnUpdateZoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateZoneActionPerformed
        // init and load data to UpdateZone
        UpdateZone updateZone = new UpdateZone(this, true);
        String pinCode = tblZoneList.getValueAt(tblZoneList.getSelectedRow(), 0).toString();
        updateZone.setZone(zoneController.getServiceManager().getZoneManagerService().get(pinCode));
        updateZone.refresh();
        updateZone.setVisible(true);
    }//GEN-LAST:event_btnUpdateZoneActionPerformed

    private void btnDeleteCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCustActionPerformed
        // 
        if (tblCustList.getSelectedRowCount() != 0) {
            int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this?", "Confirm Message", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            //Admin choose "Yes" = 0
            if (result == 0) {
                //Get cusID from table to delete
                DefaultTableModel model = (DefaultTableModel) tblCustList.getModel();
                int cusID = (int) model.getValueAt(tblCustList.getSelectedRow(), 0);
                this.getCustController().delete(cusID);
                this.refresh();
            }
        }
    }//GEN-LAST:event_btnDeleteCustActionPerformed

    private void btnClearCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearCustActionPerformed
        // Clear search box
        txtFirstName.setText("");
        txtMiddleName.setText("");
        txtLastName.setText("");
        txtUICode.setText("");
        txtYear.setText("");
        cbbCentreName.setSelectedIndex(0);
        cbbDay.setSelectedIndex(0);
        cbbMonth.setSelectedIndex(0);
        cbbStatus.setSelectedIndex(0);
    }//GEN-LAST:event_btnClearCustActionPerformed

    private void btnResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResultActionPerformed
        // 
        String firstName = null;
        String middleName = null;
        String lastName = null;
        String uicode = null;
        String date = null;
        int status = 2;
        String centreName = null;
        
        //Get text from text field
        firstName = txtFirstName.getText().trim();
        middleName = txtMiddleName.getText().trim();
        lastName = txtLastName.getText().trim();
        uicode = txtUICode.getText().trim();

        int i = 0;
        //set centre name accoriding to selected item
        if (!cbbCentreName.getSelectedItem().equals("Choose Centre")) {
            centreName = cbbCentreName.getSelectedItem().toString();
            i = cbbCentreName.getSelectedIndex();
        }
        //Set status according to selected item
        if (cbbStatus.getSelectedItem().equals("Sent")) {
            status = 1;
        }
        if (cbbStatus.getSelectedItem().equals("Not Sent")) {
            status = 0;
        }
        
        String year = txtYear.getText().trim();
        //Check if day, month and year is empty, year is valid
        if (!(cbbDay.getSelectedItem().equals("--") || cbbMonth.getSelectedItem().equals("--"))) {
            if (year.isEmpty()) {
                txtYear.requestFocus();
                JOptionPane.showMessageDialog(this, "Year must not be empty", "Error", 0);
                return;
            }
            if (Integer.parseInt(year) < 1900 || Integer.parseInt(year) > 9999) {
                txtYear.requestFocus();
                JOptionPane.showMessageDialog(this, "Year must be in range 1900 to 9999 ", "Error", 0);
                return;
            }

            Date d;
            //Parse to check for right date format
            try {
                date = Integer.parseInt(year) + "-" + cbbMonth.getSelectedItem() + "-" + cbbDay.getSelectedItem();
                SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                df.setLenient(false);
                try {
                    d = df.parse(date);
                } catch (ParseException ex) {
                    JOptionPane.showMessageDialog(this, "Day or Month is incorrect (Ex: 31/2)", "Error", 0);
                    return;
                }
                btnReport.setEnabled(true);
            } catch (NumberFormatException ex) {
                txtYear.requestFocus();
                JOptionPane.showMessageDialog(this, "Year must be a number", "Error", 0);
                return;
            }
        }

        this.refresh();
        //remove all row from table
        DefaultTableModel custModel = (DefaultTableModel) tblCustList.getModel();
        while (custModel.getRowCount() > 0) {
            custModel.removeRow(0);
        }
        //search
        this.getCustController().search(firstName, middleName, lastName, uicode, date, status, centreName);
        cbbCentreName.setSelectedIndex(i);
    }//GEN-LAST:event_btnResultActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // only work when at least 1 row is selected
        if (tblCustList.getSelectedRowCount() != 0) {
            int[] rows = tblCustList.getSelectedRows();
            ArrayList custIDs = new ArrayList();
            //Copy all custID which have statues Waiting to ArrayList
            for (int i = 0, j = 0; i < rows.length; i++) {
                if (tblCustList.getValueAt(rows[i], 5).toString().equals("Waiting")) {
                    custIDs.add(tblCustList.getValueAt(rows[i], 0));

                }
            }
            //If more than zero id is in the arraylist, update all
            if (!custIDs.isEmpty()) {
                this.getCustController().updateStatus(custIDs);
                this.refresh();
            }
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnReloadCentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadCentreActionPerformed
        // TODO add your handling code here:
        this.refreshCentre();
    }//GEN-LAST:event_btnReloadCentreActionPerformed

    private void btnReloadAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadAdminActionPerformed
        // TODO add your handling code here:
        refreshAdmin();
    }//GEN-LAST:event_btnReloadAdminActionPerformed

    private void btnReloadEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadEmpActionPerformed
        // TODO add your handling code here:
        refreshEmp();
    }//GEN-LAST:event_btnReloadEmpActionPerformed

    private void btnReloadZoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadZoneActionPerformed
        // TODO add your handling code here:
        refreshZone();
    }//GEN-LAST:event_btnReloadZoneActionPerformed

    private void treeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON3) {
            refreshTree();
        }
    }//GEN-LAST:event_treeMouseClicked

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // 
        CustomerDetails cd = new CustomerDetails(this, true);
        int id = (int) tblCustList.getValueAt(tblCustList.getSelectedRow(), 0);
        cd.setCus(custController.getServiceManager().getCustManagerService().get(id));
        cd.init();
        cd.setVisible(true);
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        // 
//        JFileChooser fileChooser=new JFileChooser();
//        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
//        fileChooser.showOpenDialog(this);
//        File file = fileChooser.getSelectedFile();
//        if(!(file == null)) {
//            String date = Integer.parseInt(txtYear.getText()) + "-" + cbbMonth.getSelectedItem() + "-" + cbbDay.getSelectedItem();
//            this.getAdminController().export(tblCustList, date, file);
//            btnReport.setEnabled(false);
//        }
    }//GEN-LAST:event_btnReportActionPerformed

    private void tblCustListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCustListMouseClicked
        // 
        btnView.setEnabled(true);
    }//GEN-LAST:event_tblCustListMouseClicked
//////////////////////////////////////////////////////////////////////////////////
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddAdmin;
    private javax.swing.JButton btnAddCentre;
    private javax.swing.JButton btnAddEmp;
    private javax.swing.JButton btnAddZone;
    private javax.swing.JButton btnClearCust;
    private javax.swing.JButton btnDeleteAdmin;
    private javax.swing.JButton btnDeleteCentre;
    private javax.swing.JButton btnDeleteCust;
    private javax.swing.JButton btnDeleteEmp;
    private javax.swing.JButton btnDeleteZone;
    private javax.swing.JButton btnEditProfile;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnReloadAdmin;
    private javax.swing.JButton btnReloadCentre;
    private javax.swing.JButton btnReloadEmp;
    private javax.swing.JButton btnReloadZone;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btnResult;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnUpdateCentre;
    private javax.swing.JButton btnUpdateEmp;
    private javax.swing.JButton btnUpdateZone;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox cbbCentreName;
    private javax.swing.JComboBox cbbDay;
    private javax.swing.JComboBox cbbMonth;
    private javax.swing.JComboBox cbbStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbAdmin;
    private javax.swing.JLabel lbAdminEmail;
    private javax.swing.JPanel pnlSearch;
    private javax.swing.JTable tblAdminList;
    private javax.swing.JTable tblCentreList;
    private javax.swing.JTable tblCustList;
    private javax.swing.JTable tblEmpList;
    private javax.swing.JTable tblZoneList;
    private javax.swing.JTree tree;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMiddleName;
    private javax.swing.JTextField txtUICode;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
